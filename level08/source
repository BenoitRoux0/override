#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

void log_wrapper(FILE* log_file, char* msg, char* filename)
{
    char buffer[264];

    strcpy(buffer, msg);
    snprintf(&buffer[strlen(buffer)], 254 - strlen(buffer), filename);
    buffer[strcspn(buffer, "\n")] = 0;
    fprintf(log_file, "LOG: %s\n", buffer);
}

int main(int argc, char **argv)
{
    int backup_fd;
    FILE *log_file;
    FILE *stream;
    char buf;
    char backup_path[104];

    buf = -1;
    if (argc != 2)
    {
        printf("Usage: %s filename\n", *argv);
    }
    log_file = fopen("./backups/.log", "w");
    if (log_file == (FILE *)NULL)
    {
        printf("ERROR: Failed to open %s\n", "./backups/.log");
        exit(1);
    }
    log_wrapper(log_file, "Starting back up: ", argv[1]);
    stream = fopen(argv[1], "r");
    if (stream == (FILE *)NULL)
    {
        printf("ERROR: Failed to open %s\n", argv[1]);
        exit(1);
    }
    strcpy(backup_path, "./backups/");
    strncat(backup_path, argv[1], 99 - strlen(backup_path));
    backup_fd = open(backup_path, 0b11000001, 0660);
    if (backup_fd < 0)
    {
        printf("ERROR: Failed to open %s%s\n", "./backups/", argv[1]);
        exit(1);
    }
    while (1)
    {
        buf = fgetc(stream);
        if (buf == -1)
            break;
        write(backup_fd, &buf, 1uLL);
    }
    log_wrapper(log_file, "Finished back up ", argv[1]);
    fclose(stream);
    close(backup_fd);
    return 0;
}