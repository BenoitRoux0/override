#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/prctl.h>
#include <sys/ptrace.h>
#include <sys/wait.h>

int main(void)
{
  int child_status;
  char buffer [128];
  long last_instr;
  pid_t pid;
  
  pid = fork();
  bzero(buffer, sizeof(buffer));
  last_instr = 0;
  child_status = 0;
  if (pid == 0) {
    prctl(1,1);
    ptrace(PTRACE_TRACEME,0,0,0);
    puts("Give me some shellcode, k");
    gets(buffer);
  }
  else {
    do {
      wait(&child_status);
      if (((child_status & 127) == 0) ||
         ('\0' < (char)((child_status & 0x7f) + 1) >> 1)) {
        puts("child is exiting...");
        return 0;
      }
      last_instr = ptrace(PTRACE_PEEKUSER,pid,44,0);
    } while (last_instr != 0xb);
    puts("no exec() for you");
    kill(pid,9);
  }
  return 0;
}
